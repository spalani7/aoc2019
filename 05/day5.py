import numpy as np
import math
import sys

input_p2 = [3,225,1,225,6,6,1100,1,238,225,104,0,1001,92,74,224,1001,224,-85,224,4,224,1002,223,8,223,101,1,224,224,1,223,224,223,1101,14,63,225,102,19,83,224,101,-760,224,224,4,224,102,8,223,223,101,2,224,224,1,224,223,223,1101,21,23,224,1001,224,-44,224,4,224,102,8,223,223,101,6,224,224,1,223,224,223,1102,40,16,225,1102,6,15,225,1101,84,11,225,1102,22,25,225,2,35,96,224,1001,224,-350,224,4,224,102,8,223,223,101,6,224,224,1,223,224,223,1101,56,43,225,101,11,192,224,1001,224,-37,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,1002,122,61,224,1001,224,-2623,224,4,224,1002,223,8,223,101,7,224,224,1,223,224,223,1,195,87,224,1001,224,-12,224,4,224,1002,223,8,223,101,5,224,224,1,223,224,223,1101,75,26,225,1101,6,20,225,1102,26,60,224,101,-1560,224,224,4,224,102,8,223,223,101,3,224,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,108,677,226,224,102,2,223,223,1006,224,329,1001,223,1,223,1108,226,677,224,1002,223,2,223,1006,224,344,101,1,223,223,7,226,677,224,102,2,223,223,1006,224,359,1001,223,1,223,1007,226,677,224,1002,223,2,223,1006,224,374,1001,223,1,223,1108,677,226,224,102,2,223,223,1005,224,389,1001,223,1,223,107,226,226,224,102,2,223,223,1006,224,404,101,1,223,223,1107,226,226,224,1002,223,2,223,1005,224,419,1001,223,1,223,1007,677,677,224,102,2,223,223,1006,224,434,101,1,223,223,1107,226,677,224,1002,223,2,223,1006,224,449,101,1,223,223,107,677,677,224,102,2,223,223,1005,224,464,1001,223,1,223,1008,226,226,224,1002,223,2,223,1005,224,479,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,494,1001,223,1,223,8,677,226,224,1002,223,2,223,1005,224,509,1001,223,1,223,108,677,677,224,1002,223,2,223,1005,224,524,1001,223,1,223,1008,677,677,224,102,2,223,223,1006,224,539,1001,223,1,223,7,677,226,224,1002,223,2,223,1005,224,554,101,1,223,223,1108,226,226,224,1002,223,2,223,1005,224,569,101,1,223,223,107,677,226,224,102,2,223,223,1005,224,584,101,1,223,223,8,226,226,224,1002,223,2,223,1005,224,599,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,614,1001,223,1,223,7,226,226,224,102,2,223,223,1006,224,629,1001,223,1,223,1107,677,226,224,102,2,223,223,1005,224,644,101,1,223,223,8,226,677,224,102,2,223,223,1006,224,659,1001,223,1,223,1008,226,677,224,1002,223,2,223,1006,224,674,1001,223,1,223,4,223,99,226]
# input_p2 = [1,9,10,3,2,3,11,0,99,30,40,50]
# input_p2 = [1,0,0,0,99]
# input_p2 = [3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99]

def eval_params(input_list, opcode, param1, param2):
    if int(opcode[-3]) == 0: # position mode
        val1 = input_list[ param1 ]
    elif int(opcode[-3]) == 1: # immediate mode
        val1 = param1
    
    if param2 is not None:
        if int(opcode[-4]) == 0: # position mode
            val2 = input_list[ param2 ]
        elif int(opcode[-4]) == 1: # immediate mode
            val2 = param2
    else:
        val2 = None
    return (val1, val2)

def run_int_program(input_list):
    j = 0
    while True:
        opcode = '{:06d}'.format(input_list[j])
#         print(opcode, j)
        if int(opcode[-2:]) == 1: # add
            val1, val2 = eval_params(input_list, opcode, input_list[j+1], input_list[j+2] )
            input_list[ input_list[j+3] ] = val1 + val2
    #         print(input_list)
            j += 4
        elif int(opcode[-2:]) == 2: # multiply
            val1, val2 = eval_params(input_list, opcode, input_list[j+1], input_list[j+2] )
            input_list[ input_list[j+3] ] = val1 * val2
    #         print(input_list)
            j += 4
        elif int(opcode[-2:]) == 3: # store
            input_list[ input_list[j+1] ] = int(input())
            j += 2
        elif int(opcode[-2:]) == 4: # load
            val1, _ = eval_params(input_list, opcode, input_list[j+1], None )
            print(val1)
            j += 2
        elif int(opcode[-2:]) == 5: # jump if true
            val1, val2 = eval_params(input_list, opcode, input_list[j+1], input_list[j+2] )
            if val1 != 0:
                if val2 >= len(input_list):
                    print("MEMORY OVERFLOW")
#                 print("Jumping to {}".format(val2))
                j = val2
            else:
                j += 3
        elif int(opcode[-2:]) == 6: # jump if false
            val1, val2 = eval_params(input_list, opcode, input_list[j+1], input_list[j+2] )
            if val1 == 0:
                if val2 >= len(input_list):
                    print("MEMORY OVERFLOW")
#                 print("Jumping to {}".format(val2))
                j = val2
            else:
                j += 3
        elif int(opcode[-2:]) == 7: # less than 
            val1, val2 = eval_params(input_list, opcode, input_list[j+1], input_list[j+2] )

            if val1 < val2:
                input_list[ input_list[j+3] ] = 1
            else:
                input_list[ input_list[j+3] ] = 0
            j += 4
        elif int(opcode[-2:]) == 8: # equal
            val1, val2 = eval_params(input_list, opcode, input_list[j+1], input_list[j+2] )

            if val1 == val2:
                input_list[ input_list[j+3] ] = 1
            else:
                input_list[ input_list[j+3] ] = 0
            j += 4
        elif int(opcode[-2:]) == 99 or j >= len(input_list):
            break
        else:
            print("unknown opcode {:06d}@{}".format(input_list[j], j))
    return input_list

output_p2 = list(input_p2)
print("output:")
run_int_program(output_p2)
## part 1 solution: 2845163
## part 2 solution: 9436229